[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "aind-dashboard"
dynamic = ["version"]
dependencies = [
    "dash>=2.0,<3.0",
    "dash-daq",
    "plotly",
    "pandas",
    "seaborn",
    "dash-bootstrap-components",
    "aind-analysis-arch-result-access",
    "gunicorn",
    "numpy",
    "scipy",
    "scikit-learn",
]

[tool.setuptools.packages.find]
include = ["app_elements*", "app_utils*", "callbacks*"]
exclude = ["tests*", "Lib*", "Include*", "Scripts*", "assets*"]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
    \.git
  | \.pytest_cache
  | __pycache__
  | build
  | dist
  | assets
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["app_elements", "app_utils", "callbacks", "shared_utils"]
known_third_party = ["dash", "pandas", "plotly", "seaborn"]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
skip_glob = ["*/__pycache__/*", "*/.*", "assets/*"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
exclude = [
    "tests/",
    "assets/",
    ".pytest_cache/",
]

[[tool.mypy.overrides]]
module = [
    "dash.*",
    "plotly.*",
    "seaborn.*", 
    "dash_daq.*",
    "dash_bootstrap_components.*",
    "aind_analysis_arch_result_access.*"
]
ignore_missing_imports = true

[tool.vulture]
# Start with conservative settings for initial analysis
min_confidence = 80
paths = [
    "app.py",
    "shared_utils.py", 
    "app_elements/",
    "app_utils/",
    "callbacks/"
]
exclude = [
    "tests/",
    "__pycache__/",
    "*.pyc",
    ".pytest_cache/",
    ".git/"
]
# Generate detailed output with file locations
verbose = true
# Sort by size to prioritize larger dead code chunks
sort_by_size = true 